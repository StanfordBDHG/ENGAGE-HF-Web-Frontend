//
// This source file is part of the Stanford Biodesign Digital Health ENGAGE-HF open-source project
//
// SPDX-FileCopyrightText: 2023 Stanford University and the project authors (see CONTRIBUTORS.md)
//
// SPDX-License-Identifier: MIT
//

/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/~__root'
import { Route as DashboardRouteImport } from './routes/~_dashboard'
import { Route as SignInIndexRouteImport } from './routes/~sign-in/~index'
import { Route as DashboardIndexRouteImport } from './routes/~_dashboard/~index'
import { Route as DashboardUsersInviteRouteImport } from './routes/~_dashboard/~users/~invite'
import { Route as DashboardUsersIdRouteImport } from './routes/~_dashboard/~users/~$id'
import { Route as DashboardPatientsInviteRouteImport } from './routes/~_dashboard/~patients/~invite'
import { Route as DashboardUsersIndexRouteImport } from './routes/~_dashboard/~users/~index'
import { Route as DashboardPatientsIndexRouteImport } from './routes/~_dashboard/~patients/~index'
import { Route as DashboardNotificationsIndexRouteImport } from './routes/~_dashboard/~notifications/~index'
import { Route as DashboardAdminIndexRouteImport } from './routes/~_dashboard/~admin/~index'
import { Route as DashboardPatientsIdIndexRouteImport } from './routes/~_dashboard/~patients/~$id/~index'
import { Route as PatientsUserIdHealthSummaryShareCodeIdIndexRouteImport } from './routes/~patients/~$userId/~healthSummary/~$shareCodeId/~index'

const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersInviteRoute = DashboardUsersInviteRouteImport.update({
  id: '/users/invite',
  path: '/users/invite',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersIdRoute = DashboardUsersIdRouteImport.update({
  id: '/users/$id',
  path: '/users/$id',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPatientsInviteRoute = DashboardPatientsInviteRouteImport.update({
  id: '/patients/invite',
  path: '/patients/invite',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersIndexRoute = DashboardUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPatientsIndexRoute = DashboardPatientsIndexRouteImport.update({
  id: '/patients/',
  path: '/patients/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardNotificationsIndexRoute =
  DashboardNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardAdminIndexRoute = DashboardAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardPatientsIdIndexRoute =
  DashboardPatientsIdIndexRouteImport.update({
    id: '/patients/$id/',
    path: '/patients/$id/',
    getParentRoute: () => DashboardRoute,
  } as any)
const PatientsUserIdHealthSummaryShareCodeIdIndexRoute =
  PatientsUserIdHealthSummaryShareCodeIdIndexRouteImport.update({
    id: '/patients/$userId/healthSummary/$shareCodeId/',
    path: '/patients/$userId/healthSummary/$shareCodeId/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof DashboardIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/admin': typeof DashboardAdminIndexRoute
  '/notifications': typeof DashboardNotificationsIndexRoute
  '/patients': typeof DashboardPatientsIndexRoute
  '/users': typeof DashboardUsersIndexRoute
  '/patients/invite': typeof DashboardPatientsInviteRoute
  '/users/$id': typeof DashboardUsersIdRoute
  '/users/invite': typeof DashboardUsersInviteRoute
  '/patients/$id': typeof DashboardPatientsIdIndexRoute
  '/patients/$userId/healthSummary/$shareCodeId': typeof PatientsUserIdHealthSummaryShareCodeIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof DashboardIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/admin': typeof DashboardAdminIndexRoute
  '/notifications': typeof DashboardNotificationsIndexRoute
  '/patients': typeof DashboardPatientsIndexRoute
  '/users': typeof DashboardUsersIndexRoute
  '/patients/invite': typeof DashboardPatientsInviteRoute
  '/users/$id': typeof DashboardUsersIdRoute
  '/users/invite': typeof DashboardUsersInviteRoute
  '/patients/$id': typeof DashboardPatientsIdIndexRoute
  '/patients/$userId/healthSummary/$shareCodeId': typeof PatientsUserIdHealthSummaryShareCodeIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_dashboard/': typeof DashboardIndexRoute
  '/sign-in/': typeof SignInIndexRoute
  '/_dashboard/admin/': typeof DashboardAdminIndexRoute
  '/_dashboard/notifications/': typeof DashboardNotificationsIndexRoute
  '/_dashboard/patients/': typeof DashboardPatientsIndexRoute
  '/_dashboard/users/': typeof DashboardUsersIndexRoute
  '/_dashboard/patients/invite': typeof DashboardPatientsInviteRoute
  '/_dashboard/users/$id': typeof DashboardUsersIdRoute
  '/_dashboard/users/invite': typeof DashboardUsersInviteRoute
  '/_dashboard/patients/$id/': typeof DashboardPatientsIdIndexRoute
  '/patients/$userId/healthSummary/$shareCodeId/': typeof PatientsUserIdHealthSummaryShareCodeIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/admin'
    | '/notifications'
    | '/patients'
    | '/users'
    | '/patients/invite'
    | '/users/$id'
    | '/users/invite'
    | '/patients/$id'
    | '/patients/$userId/healthSummary/$shareCodeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/admin'
    | '/notifications'
    | '/patients'
    | '/users'
    | '/patients/invite'
    | '/users/$id'
    | '/users/invite'
    | '/patients/$id'
    | '/patients/$userId/healthSummary/$shareCodeId'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_dashboard/'
    | '/sign-in/'
    | '/_dashboard/admin/'
    | '/_dashboard/notifications/'
    | '/_dashboard/patients/'
    | '/_dashboard/users/'
    | '/_dashboard/patients/invite'
    | '/_dashboard/users/$id'
    | '/_dashboard/users/invite'
    | '/_dashboard/patients/$id/'
    | '/patients/$userId/healthSummary/$shareCodeId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  SignInIndexRoute: typeof SignInIndexRoute
  PatientsUserIdHealthSummaryShareCodeIdIndexRoute: typeof PatientsUserIdHealthSummaryShareCodeIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/users/invite': {
      id: '/_dashboard/users/invite'
      path: '/users/invite'
      fullPath: '/users/invite'
      preLoaderRoute: typeof DashboardUsersInviteRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/users/$id': {
      id: '/_dashboard/users/$id'
      path: '/users/$id'
      fullPath: '/users/$id'
      preLoaderRoute: typeof DashboardUsersIdRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/patients/invite': {
      id: '/_dashboard/patients/invite'
      path: '/patients/invite'
      fullPath: '/patients/invite'
      preLoaderRoute: typeof DashboardPatientsInviteRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/users/': {
      id: '/_dashboard/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/patients/': {
      id: '/_dashboard/patients/'
      path: '/patients'
      fullPath: '/patients'
      preLoaderRoute: typeof DashboardPatientsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/notifications/': {
      id: '/_dashboard/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof DashboardNotificationsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/': {
      id: '/_dashboard/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof DashboardAdminIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/patients/$id/': {
      id: '/_dashboard/patients/$id/'
      path: '/patients/$id'
      fullPath: '/patients/$id'
      preLoaderRoute: typeof DashboardPatientsIdIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/patients/$userId/healthSummary/$shareCodeId/': {
      id: '/patients/$userId/healthSummary/$shareCodeId/'
      path: '/patients/$userId/healthSummary/$shareCodeId'
      fullPath: '/patients/$userId/healthSummary/$shareCodeId'
      preLoaderRoute: typeof PatientsUserIdHealthSummaryShareCodeIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAdminIndexRoute: typeof DashboardAdminIndexRoute
  DashboardNotificationsIndexRoute: typeof DashboardNotificationsIndexRoute
  DashboardPatientsIndexRoute: typeof DashboardPatientsIndexRoute
  DashboardUsersIndexRoute: typeof DashboardUsersIndexRoute
  DashboardPatientsInviteRoute: typeof DashboardPatientsInviteRoute
  DashboardUsersIdRoute: typeof DashboardUsersIdRoute
  DashboardUsersInviteRoute: typeof DashboardUsersInviteRoute
  DashboardPatientsIdIndexRoute: typeof DashboardPatientsIdIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAdminIndexRoute: DashboardAdminIndexRoute,
  DashboardNotificationsIndexRoute: DashboardNotificationsIndexRoute,
  DashboardPatientsIndexRoute: DashboardPatientsIndexRoute,
  DashboardUsersIndexRoute: DashboardUsersIndexRoute,
  DashboardPatientsInviteRoute: DashboardPatientsInviteRoute,
  DashboardUsersIdRoute: DashboardUsersIdRoute,
  DashboardUsersInviteRoute: DashboardUsersInviteRoute,
  DashboardPatientsIdIndexRoute: DashboardPatientsIdIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  SignInIndexRoute: SignInIndexRoute,
  PatientsUserIdHealthSummaryShareCodeIdIndexRoute:
    PatientsUserIdHealthSummaryShareCodeIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
